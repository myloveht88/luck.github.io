{"meta":{"title":"HT","subtitle":"与今日书","description":"与今日书","author":"HT","url":"http://example.com","root":"/"},"pages":[{"title":"ABOUT ME","date":"2023-08-30T13:26:49.777Z","updated":"2023-08-30T13:26:49.777Z","comments":true,"path":"about/index.html","permalink":"http://example.com/about/index.html","excerpt":"","text":"生于1988龙年，成长于中部小城，既无过人之容貌体态，又无富裕之家室可挥霍。 未被17年的冬冷夏热所降服，却沉浸于一年四季而乐。 虚度5年求学岁月于西安，又探索事业两年于深圳，终不似小城之四季分明。 春育萌发之希望 夏至蝉鸣与凉风 秋染绿叶至初黄 冬落雪白予众人 至上海，想来十年有四。 些许年来，完成世人都走之路，婚与育。妻与吾共奋斗，女与吾同成长。 而今三十有五，正值中年危机之时，经济下滑之际，奋与躺间反复横跳，心有凡间之俗欲，唤为奋斗之标的，心心念念多人不如我，应有更好的前途。 心有戚戚言，故建此博与今日书。","author":""},{"title":"tags","date":"2023-08-28T02:33:40.000Z","updated":"2023-08-30T07:40:31.737Z","comments":false,"path":"tags/index.html","permalink":"http://example.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"脑图转测试用例","slug":"脑图转测试用例","date":"2023-08-31T11:45:00.000Z","updated":"2023-08-31T12:48:13.517Z","comments":true,"path":"2023/08/31/脑图转测试用例/","link":"","permalink":"http://example.com/2023/08/31/%E8%84%91%E5%9B%BE%E8%BD%AC%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B/","excerpt":"vue2在线脑图 工作中，测试人员都习惯用xmind来写测试思路，但是项目需求和设计往往很大而杂，导致测试的xmind条目繁多，再基于xmind写成excel的用例更是费时费力。 一直都想怎么利用开源的脑图在线工具，把大家的脑图都放到线上来，一来好维护，二来更好分享出去。在测试用例输出上做到省时省力。 找来找去发现了一个不错的开源工具：https://github.com/wanglin2 github地址：https://github.com/wanglin2/mind-map 在线预览：思绪思维导图 还有一个vue3版本：https://github.com/huangyuanyin/hyy-vue3-mindMap","text":"vue2在线脑图 工作中，测试人员都习惯用xmind来写测试思路，但是项目需求和设计往往很大而杂，导致测试的xmind条目繁多，再基于xmind写成excel的用例更是费时费力。 一直都想怎么利用开源的脑图在线工具，把大家的脑图都放到线上来，一来好维护，二来更好分享出去。在测试用例输出上做到省时省力。 找来找去发现了一个不错的开源工具：https://github.com/wanglin2 github地址：https://github.com/wanglin2/mind-map 在线预览：思绪思维导图 还有一个vue3版本：https://github.com/huangyuanyin/hyy-vue3-mindMap 代码优化输出excel的测试用例 通过对开源代码进行改造，增加了excel输入模块，调整了输入输出方式，增加了目录数和用例数。 编写的脑图会存在本地浏览器的缓存中，key为SIMPLE_MIND_MAP_DATA，实时刷新。 新增的转换excel方法在\\src\\pages\\Edit\\components\\Toolbar.vue中的toExcel方法。 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104async toExcel(content) &#123; // content = localStorage.getItem(&#x27;SIMPLE_MIND_MAP_DATA&#x27;) // console.log(JSON.parse(content)) try &#123; content = localStorage.getItem(&#x27;SIMPLE_MIND_MAP_DATA&#x27;) const xlsx = require(&#x27;xlsx&#x27;) const data = JSON.parse(content) const caseTitle = data.root.data.text const sheet = xlsx.utils.json_to_sheet([]) const headers = [&#x27;用例目录&#x27;,&#x27;用例名称&#x27;,&#x27;需求ID&#x27;,&#x27;前置条件&#x27;,&#x27;用例步骤&#x27;,&#x27;预期结果&#x27;,&#x27;用例类型&#x27;,&#x27;用例状态&#x27;,&#x27;用例等级&#x27;,&#x27;创建人&#x27;,&#x27;是否完成自动化&#x27;,&#x27;不可自动化原因&#x27;,&#x27;用例关键字&#x27;,&#x27;序号&#x27;] xlsx.utils.sheet_add_aoa(sheet, [headers], &#123; origin: &#x27;A1&#x27; &#125;) let row = 2 let caseNameIndex = 1 let expectedIndex = 1 data.root.children.forEach((directory, index) =&gt; &#123; //获取目录 const directoryName = directory.data.text console.log(&#x27;目录:&#x27;, directoryName) if (directory.data.text == &#x27;&#x27;) &#123; this.$message(&#123; showClose: true, message: &#x27;用例目录不正确，请检查用例目录是否完整&#x27;, type: &#x27;error&#x27; &#125;) &#125; else if (directory.children == &#x27;&#x27;) &#123; this.$message(&#123; showClose: true, message: &#x27;用例名称格式不正确，请检查用例名称是否完整&#x27;, type: &#x27;error&#x27; &#125;) &#125; let caseNames = [] var caseName = &#x27;&#x27; var casebeforeName = &#x27;&#x27; directory.children.forEach(caseAll =&gt; &#123; caseName = caseAll.data.text console.log(&#x27;用例名称:&#x27;, caseName) if (caseAll.children == &#x27;&#x27;) &#123; this.$message(&#123; showClose: true, message: &#x27;测试前提条件不正确，请检查前提条件是否完整&#x27;, type: &#x27;error&#x27; &#125;) return &#125; const caseSteps = [] const expectedResults = [] caseAll.children.forEach(casebefore =&gt; &#123; casebeforeName = casebefore.data.text // caseNameName.push(casebefore.data.text) if (casebefore.children == &#x27;&#x27;) &#123; this.$message(&#123; showClose: true, message: &#x27;用例步骤格式不正确，请检查用例步骤是否完整&#x27;, type: &#x27;error&#x27; &#125;) &#125; var stepindex = 1 casebefore.children.forEach(caseStep =&gt; &#123; caseSteps.push(stepindex + &#x27;、&#x27;+ caseStep.data.text.trim()) if (caseStep.children == &#x27;&#x27;) &#123; this.$message(&#123; showClose: true, message: &#x27;预期结果格式不正确，请检查预期结果是否完整&#x27;, type: &#x27;error&#x27; &#125;) &#125; expectedResults.push(stepindex + &#x27;、&#x27;+ caseStep.children[0].data.text.trim()) stepindex ++ &#125;) &#125;) caseNames.push([ directoryName, caseName, &#x27;&#x27;, casebeforeName, caseSteps.join(&#x27;\\n&#x27;), expectedResults.join(&#x27;\\n&#x27;), &#x27;功能测试&#x27;, &#x27;正常&#x27;, &#x27;Level1&#x27;, &#x27;测试人&#x27;, &#x27;否&#x27; ]) console.log(&#x27;caseNames&#x27;, caseNames) &#125;) var rowValues = [] caseNames.forEach(caseName =&gt; &#123; rowValues = caseName xlsx.utils.sheet_add_aoa(sheet, [rowValues], &#123; origin: `A$&#123;row&#125;` &#125;) row++ &#125;) console.log(&#x27;rowValues:&#x27;, rowValues) &#125;) const workbook = xlsx.utils.book_new() xlsx.utils.book_append_sheet(workbook, sheet, &#x27;Sheet1&#x27;) sheet[&#x27;!cols&#x27;] = headers.map(() =&gt; (&#123; width: 30, wrapText: true &#125;)) xlsx.writeFile(workbook, caseTitle + &#x27;测试用例.xlsx&#x27;) &#125; catch (error) &#123; console.log(error) &#125; &#125;, 对excel表头为如下格式的测试用例进行了适配： 用例目录 用例名称 需求ID 前置条件 用例步骤 预期结果 用例类型 用例状态 用例等级 创建人 是否完成自动化 不可自动化原因 用例关键字 序号 github地址：https://github.com/myloveht88/mindcase 遗留问题： 1、脑图样式无法做到tab之后还能按照模板输出，故只能通过复制老的来新增目录、用例和步骤等。 2、用例过多会卡顿和未知bug，以后持续维护。","categories":[],"tags":[{"name":"code","slug":"code","permalink":"http://example.com/tags/code/"}],"author":"huangtuo"},{"title":"碎碎念的周一","slug":"碎碎念的周一","date":"2023-08-25T06:45:00.000Z","updated":"2023-08-31T01:49:08.132Z","comments":true,"path":"2023/08/25/碎碎念的周一/","link":"","permalink":"http://example.com/2023/08/25/%E7%A2%8E%E7%A2%8E%E5%BF%B5%E7%9A%84%E5%91%A8%E4%B8%80/","excerpt":"上海是真的潮湿 记忆里，这三个月不知道下了多少雨了买的黑色油漆丢在客厅的角落里因为懒或者说还能忍受这小牛u1pro的不完美我觉得国庆前应该会动手处理今天公众号又提示一黄一蓝雷电预警外面眼看黑了下来过了夏至，本来天就黑的早，现在更早了","text":"上海是真的潮湿 记忆里，这三个月不知道下了多少雨了买的黑色油漆丢在客厅的角落里因为懒或者说还能忍受这小牛u1pro的不完美我觉得国庆前应该会动手处理今天公众号又提示一黄一蓝雷电预警外面眼看黑了下来过了夏至，本来天就黑的早，现在更早了 又是不干正事的一天 昨晚mac上折腾到一点的博客，也没搞定的问题早上一来就通过more注释搞定了感觉又白熬夜了如果不熬夜现在精神应该好多了不用靠似有似无的咖啡提神了也不想去熟悉这些工作和业务等着晚上提测，一切明天再说 等着4点的球赛 虽然对中国男篮有那么点期盼总得有点期盼不然生活不是没有希望么不过在篮球这种较真的体育项目下能力就是能力，运气有点用却不多巴黎奥运，亚洲男篮都没啥竞争力姚明过后，二十年都难人一生又有多少个二十年呢还好体育只是生活的点缀 周末各种股市利好 然后并没有什么卵用早上高开之后，给大家表演了个高台跳水加200米自由泳的绝活属于A股的绝活眼看着一个巨大的跳空缺口和一个巨长的绿色阴线跌麻了3000点你自己玩吧全仓躺平装死 房市救的动吗？ 之前看说中国会陷入二十年的经济衰退从就业率和当前的中年危机可见一二内忧外患眼看麻城、武汉，甚至是上海的房价一天比一天低我内心却很平静还有多少能力去承担未来三十年的贷款呢跌吧跌吧跌到大家不用为房贷发愁自然什么都好了敢去消费了敢去创业了人民头上的三座大山总得慢慢挪走吧不然哪里来的创新哪里来的幸福呢要我说，不救好或者说预期变了救不动了","categories":[],"tags":[{"name":"life","slug":"life","permalink":"http://example.com/tags/life/"}],"author":"huangtuo"},{"title":"更换hexo主题","slug":"安装hexo主题","date":"2023-08-25T05:51:22.922Z","updated":"2023-08-31T01:49:10.190Z","comments":true,"path":"2023/08/25/安装hexo主题/","link":"","permalink":"http://example.com/2023/08/25/%E5%AE%89%E8%A3%85hexo%E4%B8%BB%E9%A2%98/","excerpt":"1、进入Hexo官网https://hexo.io/themes/ 选择喜欢的主题 2、在hexo目录下的themes文件夹下打开git bash，输入以下命令，下载主题:","text":"1、进入Hexo官网https://hexo.io/themes/ 选择喜欢的主题 2、在hexo目录下的themes文件夹下打开git bash，输入以下命令，下载主题: 123git clone 复制主题的网址例如：D:\\blog&gt;git clone https://github.com/litten/hexo-theme-yilia.git themes/yilia 3、配置_config.yml文件打开hexo目录下的_config.yml文件，修改theme，注意冒号之后的空格 因为刚刚已经下载过主题，打开hexo目录下的themes文件夹会看到新生成的主题文件夹，将他的名字复制到_config.yml里并保存，如图（ps：注意hexo和themes的主题文件夹里各有一个_config.yml文件，不要搞混了，后续增加各种效果还需要用到的） 4、在hexo目录下，打开git bash，输入以下命令，清除缓存，生成静态文件，查看效果 123hexo cleanhexo ghexo s 感觉效果满意就可以部署到GitHub上了 5、在hexo目录下，打开git bash，输入以下命令，清除缓存，将内容部署到GitHub 12hexo cleanhexo g -d 配置完成，打开网址查看效果","categories":[{"name":"tools","slug":"tools","permalink":"http://example.com/categories/tools/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://example.com/tags/hexo/"}]},{"title":"Hello World","slug":"hello-world","date":"2023-08-25T02:25:25.215Z","updated":"2023-08-31T01:49:06.327Z","comments":true,"path":"2023/08/25/hello-world/","link":"","permalink":"http://example.com/2023/08/25/hello-world/","excerpt":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[{"name":"code","slug":"code","permalink":"http://example.com/categories/code/"}],"tags":[{"name":"code","slug":"code","permalink":"http://example.com/tags/code/"}]}],"categories":[{"name":"tools","slug":"tools","permalink":"http://example.com/categories/tools/"},{"name":"code","slug":"code","permalink":"http://example.com/categories/code/"}],"tags":[{"name":"code","slug":"code","permalink":"http://example.com/tags/code/"},{"name":"life","slug":"life","permalink":"http://example.com/tags/life/"},{"name":"hexo","slug":"hexo","permalink":"http://example.com/tags/hexo/"}]}